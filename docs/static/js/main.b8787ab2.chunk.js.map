{"version":3,"sources":["cryptomonedas.png","hooks/useMoneda.js","hooks/useCriptomoneda.js","components/Error.js","components/Formulario.js","components/Cotizacion.js","components/Spinner.js","App.js","reportWebVitals.js","index.js"],"names":["Label","styled","label","Select","select","useMoneda","stateInicial","opciones","useState","state","actualizarState","onChange","e","target","value","map","opcion","codigo","nombre","useCriptomoneda","CoinInfo","Name","FullName","Id","MensajeError","div","Error","mensaje","Boton","input","Formulario","guardarMoneda","guardarCriptomoneda","listacripto","guardarCriptomonedas","error","guardarError","moneda","SelectMonedas","criptomoneda","SelectCripto","useEffect","a","axios","get","resultado","data","Data","consultAPI","onSubmit","preventDefault","type","Resultado","Info","p","Precio","span","Cotizacion","Object","keys","length","PRICE","HIGHDAY","LOWDAY","CHANGEPCT24HOUR","LASTUPDATE","Spinner","className","Contenedor","Imagen","img","Heading","h1","App","guardarResultado","cargando","guardarCargando","url","setTimeout","DISPLAY","cotizarCriptomoneda","componente","src","imagen","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8787ab2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptomonedas.51f1d2ed.png\";","import React, {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nconst Label = styled.label`\n    font-family: 'Bebas Neue', cursive;\n    color: #FFF;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 2.4rem;\n    margin-top: 2rem;\n    display: block;\n`;\n\nconst Select = styled.select`\n    width: 100%;\n    display:block;\n    padding: 1rem;\n    -webkit-appearance: none;\n    border-radius: 10px;\n    border: none;\n    font-size: 1.2rem;\n`\n\nconst useMoneda = (label, stateInicial, opciones) => {\n\n    // State de nuestro custom hook\n    const [state, actualizarState] = useState(stateInicial);\n\n    const Seleccionar = () => (\n        <Fragment>\n            <Label>{label}</Label>\n            <Select\n                onChange={e => actualizarState(e.target.value)}\n                value={ state }>\n                <option value=\"\">- Seleccione -</option>\n                {opciones.map(opcion => (\n                    <option key={opcion.codigo} value={opcion.codigo}>{opcion.nombre}</option>\n                ) )}\n            </Select>\n        </Fragment>\n    );\n\n    // Retornar state, interfaz y fn que modifica el state\n    return [state, Seleccionar, actualizarState];\n}\n\nexport default useMoneda;","import React, {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nconst Label = styled.label`\n    font-family: 'Bebas Neue', cursive;\n    color: #FFF;\n    text-transform: uppercase;\n    font-weight: bold;\n    font-size: 2.4rem;\n    margin-top: 2rem;\n    display: block;\n`;\n\nconst Select = styled.select`\n    width: 100%;\n    display:block;\n    padding: 1rem;\n    -webkit-appearance: none;\n    border-radius: 10px;\n    border: none;\n    font-size: 1.2rem;\n`\n\nconst useCriptomoneda = (label, stateInicial, opciones) => {\n\n    // State de nuestro custom hook\n    const [state, actualizarState] = useState(stateInicial);\n\n    const SelectCrpto = () => (\n        <Fragment>\n            <Label>{label}</Label>\n            <Select\n                onChange={e => actualizarState(e.target.value)}\n                value={ state }>\n                <option value=\"\">- Seleccione -</option>\n                {opciones.map(opcion => (\n                    <option key={opcion.CoinInfo.Id} value={opcion.CoinInfo.Name}>{opcion.CoinInfo.FullName}</option>\n                ) )}\n            </Select>\n        </Fragment>\n    );\n\n    // Retornar state, interfaz y fn que modifica el state\n    return [state, SelectCrpto, actualizarState];\n}\n\nexport default useCriptomoneda;","import React from 'react'\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst MensajeError = styled.div`\n    background-color: #b7322C;\n    padding: 1rem;\n    color: #fff;\n    font-size: 30px;\n    text-transform: uppercase;\n    font-weight: bold;\n    text-align: center;\n    font-family: Arial, Helvetica, sans-serif;\n`\n\nconst Error = ({mensaje}) => {\n    return (\n        <MensajeError>{mensaje}</MensajeError>\n    )\n}\n\nError.propTypes = {\n    mensaje : PropTypes.string.isRequired\n}\n\nexport default Error\n","import React, { useEffect, useState } from 'react';\nimport styled from '@emotion/styled';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nimport useMoneda from '../hooks/useMoneda';\nimport useCriptomoneda from '../hooks/useCriptomoneda';\nimport Error from './Error';\n\nconst Boton = styled.input`\n    margin-top: 20px;\n    font-weight: bold;\n    font-size:20px;\n    padding: 10px;\n    background-color: #66A2FE;\n    border: none;\n    width: 100%;\n    color: #fff;\n    transition: background-color .3s ease;\n\n    &:hover{\n        background-color: #326AC0;\n        cursor: pointer;\n    }\n`\n\nconst Formulario = ({guardarMoneda, guardarCriptomoneda}) => {\n\n    // useState de listado de criptomonedas\n    const [listacripto, guardarCriptomonedas] = useState([]);\n    const [error, guardarError] = useState(false);\n\n    const MONEDAS = [\n        { codigo: 'USD', nombre: 'Dollar US' },\n        { codigo: 'MXN', nombre: 'Peso Mexicano' },\n        { codigo: 'EUR', nombre: 'Euro' },\n        { codigo: 'GBP', nombre : 'Libra Esterlina'}\n    ]\n\n    // utilizar useMoneda \n    const [moneda, SelectMonedas] = useMoneda('Elige tu moneda', '', MONEDAS);\n    // utilizar useCriptomoneda\n    const [criptomoneda, SelectCripto] = useCriptomoneda('Elige tu criptomoneda', '', listacripto);\n    // ejecutar llamado a la api\n    useEffect(() => {\n        const consultAPI = async () => {\n            const url = `https://min-api.cryptocompare.com/data/top/mktcapfull?limit=10&tsym=USD`;\n            const resultado = await axios.get(url);\n            guardarCriptomonedas(resultado.data.Data);\n        }  \n        consultAPI();\n    }, []);\n\n    const cotizarMoneda = (e) => {\n        e.preventDefault();\n        // validar\n        if (moneda === '' || criptomoneda === '') {\n            guardarError(true);\n            return;\n        }\n        guardarError(false);\n        // guardar state\n        guardarMoneda(moneda);\n        guardarCriptomoneda(criptomoneda);\n    }\n\n    return (\n        <form\n            onSubmit={cotizarMoneda}>\n            {error && <Error mensaje=\"Todos los campos son obligatorios\"/>}\n            <SelectMonedas />\n            <SelectCripto />\n            <Boton\n                type=\"submit\"\n                value=\"Calcular\"/>\n        </form>\n    )\n}\n\nFormulario.propTypes = {\n    guardarMoneda: PropTypes.func.isRequired,\n    guardarCriptomoneda: PropTypes.func.isRequired\n}\n\nexport default Formulario\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst Resultado = styled.div`\n    color: #FFF;\n    margin-top: 10px;\n`;\n\nconst Info = styled.p`\n    font-size: 18px;\n\n    span {\n        font-weight: bold;\n    }\n`\n\nconst Precio = styled.span`\n    font-size: 30px;\n`\n\nconst Cotizacion = ({ resultado }) => {\n    if (Object.keys(resultado).length === 0) return null;\n    return (\n        <Resultado>\n            <Precio>El precio es: <span>{resultado.PRICE}</span></Precio>\n            <Info>El precio más alto del día: <span>{resultado.HIGHDAY}</span></Info>\n            <Info>El precio más bajo del dia: <span>{resultado.LOWDAY}</span></Info>\n            <Info>Ultimas 24 horas: <span>{resultado.CHANGEPCT24HOUR}</span></Info>\n            <Info>Ultima actualización: <span>{resultado.LASTUPDATE}</span></Info>\n        </Resultado>\n    )\n}\n\nCotizacion.propTypes = {\n    resultado : PropTypes.object.isRequired\n}\n\nexport default Cotizacion;\n","import React from 'react'\nimport './Spinner.css';\n\nconst Spinner = () => {\n    return (\n        <div className=\"sk-chase\">\n            <div className=\"sk-chase-dot\"></div>\n            <div className=\"sk-chase-dot\"></div>\n            <div className=\"sk-chase-dot\"></div>\n            <div className=\"sk-chase-dot\"></div>\n            <div className=\"sk-chase-dot\"></div>\n            <div className=\"sk-chase-dot\"></div>\n        </div>\n    )\n}\n\nexport default Spinner;\n","import React, { useState, useEffect } from 'react';\nimport styled from '@emotion/styled';\nimport axios from 'axios';\nimport imagen from './cryptomonedas.png';\nimport Formulario from './components/Formulario';\nimport Cotizacion from './components/Cotizacion';\nimport Spinner from './components/Spinner';\n\nconst Contenedor = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  @media(min-width:992px){\n    display: grid;\n    grid-template-columns: repeat(2,1fr);\n    column-gap: 2rem;\n  }\n`\nconst Imagen = styled.img`\n  max-width: 100%;\n  margin-top: 5rem;\n`\nconst Heading = styled.h1`\n  font-family: 'Bebas Neue', cursive;\n  color: #fff;\n  text-align: left;\n  font-weight: 700;\n  font-size: 50px;\n  margin-bottom: 50px;\n  margin-top: 80px;\n\n  &::after{\n    content: '';\n    width: 100px;\n    height: 6px;\n    background-color: #66A2FE;\n    display: block;\n  }\n`\n\nfunction App() {\n\n  const [moneda, guardarMoneda] = useState('');\n  const [criptomoneda, guardarCriptomoneda] = useState('');\n  const [resultado, guardarResultado] = useState({});\n  const [cargando, guardarCargando] = useState(false); \n\n  useEffect(() => {\n    // evitar la ejecución por 1er ocasión\n    if (moneda === '') return null;\n\n    // API para consultar la cotización\n    const cotizarCriptomoneda = async () => {\n      const url = `https://min-api.cryptocompare.com/data/pricemultifull?fsyms=${criptomoneda}&tsyms=${moneda}`;\n      const resultado = await axios.get(url);\n      // mostrar spinner\n      guardarCargando(true);\n\n      // Ocultar el spinner y mostrar el resultado\n\n      setTimeout(() => {\n        // cambiar el estato de cargando \n        guardarCargando(false);\n        // guardar cotización\n        guardarResultado(resultado.data.DISPLAY[criptomoneda][moneda]);\n      }, 3000);\n    }\n    cotizarCriptomoneda();\n\n  }, [moneda, criptomoneda]);\n\n  // mostrar spinner o resultado \n  const componente = (cargando) ? <Spinner /> : <Cotizacion resultado={resultado} />;\n\n  return (\n    <Contenedor>\n      <div>\n        <Imagen \n          src={imagen}\n          alt='Imagen cripto'\n          />\n      </div>\n      <div>\n        <Heading>Cotiza Criptomonedas al instante</Heading>\n        <Formulario\n          guardarMoneda={guardarMoneda}\n          guardarCriptomoneda={guardarCriptomoneda}\n        />\n\n        {componente}\n      </div>\n    </Contenedor>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}